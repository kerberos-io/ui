/*
  Override SASS' handling of HSL(a) color functions, don't touch it and let CSS handle it itself.
  This will enable the trick with variable alpha channels for CSS color variables (see below).
*/
/*
  Function for defining (not only) vertical rhythm by multiplies of 12px
    Examples:
    width: size(2); (equals to "width: 24px;")
    line-height: size(3); (equals to "line-height: 36px;")
*/
/*
  Responsivity mixin for custom min-width styles
    Examples:
    @include break-from(450px) { ... }
*/
:root {
  /*
    Usage:
    - regular colors: "color: var(--hub);"
    - transparent colors: "color: hsla(var(--hub-hsl), 0.3);" (mind the "-hsl" suffix in variable)
  */
  --hub: hsl(278, 30%, 48%);
  --hub-hsl: 278, 30%, 48%;
  --hub-darker: hsl(278, 34%, 31%);
  --hub-darker-hsl: 278, 34%, 31%;
  --oss: hsl(2, 48%, 39%);
  --oss-hsl: 2, 48%, 39%;
  --oss-darker: hsl(2, 52%, 25%);
  --oss-darker-hsl: 2, 52%, 25%;
  --enterprise: hsl(162, 24%, 38%);
  --enterprise-hsl: 162, 24%, 38%;
  --enterprise-darker: hsl(162, 26%, 26%);
  --enterprise-darker-hsl: 162, 26%, 26%;
  --vault: hsl(229, 25%, 45%);
  --vault-hsl: 229, 25%, 45%;
  --vault-darker: hsl(230, 28%, 31%);
  --vault-darker-hsl: 230, 28%, 31%;
  --secondary: hsl(0, 3%, 41%);
  --secondary-hsl: 0, 3%, 41%;
  --secondary-darker: hsl(0, 3%, 48%);
  --secondary-darker-hsl: 0, 3%, 48%;
  --text: hsl(0, 3%, 15%);
  --text-hsl: 0, 3%, 15%;
  --text-muted: hsl(0, 3%, 41%);
  --text-muted-hsl: 0, 3%, 41%;
  --text-light: hsl(0, 5%, 63%);
  --text-light-hsl: 0, 5%, 63%;
  --card: hsl(0, 0%, 100%);
  --card-hsl: 0, 0%, 100%;
  --card-muted: hsl(0, 0%, 98%);
  --card-muted-hsl: 0, 0%, 98%;
  --info: hsl(205, 74%, 53%);
  --info-hsl: 205, 74%, 53%;
  --info-darker: hsl(205, 71%, 41%);
  --info-darker-hsl: 205, 71%, 41%;
  --success: hsl(131, 31%, 52%);
  --success-hsl: 131, 31%, 52%;
  --success-darker: hsl(130, 35%, 39%);
  --success-darker-hsl: 130, 35%, 39%;
  --warning: hsl(47, 86%, 47%);
  --warning-hsl: 47, 86%, 47%;
  --alert: hsl(2, 58%, 48%);
  --alert-darker: hsl(2, 63%, 36%);
  --alert-darker-hsl: 2, 63%, 36%;
  --alert-hsl: 2, 58%, 48%;
  --bg: hsl(0, 5%, 93%);
  --bg-hsl: 0, 5%, 93%;
  --bg-muted: hsl(0, 4%, 89%);
  --bg-muted-hsl: 0, 4%, 89%;
  --bg-white: hsl(0, 0%, 100%);
  --bg-white-hsl: 0, 0%, 100%;
  --upper-gradient: linear-gradient(90deg, var(--hub) 0%, #b255b4 58.33%, var(--oss) 100%);
  --upper-gradient-mobile: linear-gradient(90deg, var(--hub) 0%, #b255b4 100%);
  --radius: 4px;
  --main-content-gutter: 24px; }
  @media only screen and (min-width: 800px) {
    :root {
      --main-content-gutter: 36px; } }
  @media only screen and (min-width: 1200px) {
    :root {
      --main-content-gutter: 48px; } }

/*
  Usage:
  @extend %box-shadow;
*/
.control-bar {
  box-shadow: 0px 4px 34px rgba(0, 0, 0, 0.04), 0px 3px 4px rgba(0, 0, 0, 0.1); }

.button, .button .icon, .button .text, label, input, textarea, select, .picker-with-search ul.items label {
  transition: all 0.1s; }

/*
  Self-hosted fonts
*/
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("/fonts/Inter/Inter-Regular.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-Regular.woff?v=3.18") format("woff"); }

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("/fonts/Inter/Inter-Medium.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-Medium.woff?v=3.18") format("woff"); }

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("/fonts/Inter/Inter-SemiBold.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-SemiBold.woff?v=3.18") format("woff"); }

/* -------------------------------------------------------
Variable font.
Usage:

  body {
    font-family: 'Inter', sans-serif; // use regular Inter font by default..
    @supports (font-variation-settings: normal) {
      font-family: 'Inter var', sans-serif; // ..but if supported, use variable Inter font instead (all-in-one)
    }
  }

*/
@font-face {
  font-family: 'Inter var';
  font-weight: 100 900;
  font-display: swap;
  font-style: normal;
  font-named-instance: 'Regular';
  src: url("/fonts/Inter/Inter-roman.var.woff2?v=3.18") format("woff2"); }

html {
  box-sizing: border-box; }

body {
  box-sizing: border-box;
  background: var(--bg);
  margin: 0;
  padding: 0;
  font-family: 'Inter', sans-serif; }
  @supports (font-variation-settings: normal) {
    body {
      font-family: 'Inter var', sans-serif; } }

h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  color: var(--text); }

p {
  font-size: 15px;
  line-height: 24px;
  color: var(--text-muted); }

b, strong {
  font-weight: 500; }

a {
  text-decoration: none; }

hr {
  border: none;
  border-top: 1px solid var(--bg-muted);
  margin: 24px 0; }
  .--padded hr {
    margin: 24px -24px; }
  hr.--thick {
    border-width: 3px; }

.block .block-header .icon {
  opacity: 0.4; }

.block .block-header h1 {
  line-height: 36px;
  font-size: 16px;
  margin: 0 0 0 12px; }

.block .body .--padded {
  padding: 24px 24px;
  display: block; }

/*
  ----- BUTTONS -----

  a) <ButtonField text="xxx" action="xxx" type="neutral"></ButtonField>
  b) <input type="submit" class="input alert button" value="xxx">
  c) <a class="neutral button"><span class="text">xxx</span></a>
*/
.button {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 36px;
  background: var(--hub);
  border: 0;
  border-bottom: 2px solid var(--hub-darker);
  border-radius: var(--radius);
  cursor: pointer;
  outline: none;
  padding: 0 15px;
  color: var(--bg-white);
  font-weight: 600;
  font-size: 14px; }
  .button .icon {
    display: flex;
    opacity: 0.5;
    position: relative; }
    .button .icon + .text {
      margin-left: 10px; }
  .button .text {
    color: var(--card);
    position: relative; }
  .button.active {
    box-shadow: 0 3px 1px hsla(var(--text-hsl), 0.4) inset; }
  .button:hover, .button.active {
    background: var(--hub-darker);
    text-decoration: none; }
    .button:hover .icon, .button.active .icon {
      top: 1px; }
    .button:hover .text, .button.active .text {
      top: 1px; }
    .button:hover.input, .button.active.input {
      padding-top: 2px; }
  .button:focus {
    box-shadow: 0 0 0 4px hsla(var(--hub-hsl), 0.25); }
  .button.input {
    width: auto; }
  .button.success {
    background: var(--success);
    border-color: var(--success-darker); }
    .button.success:hover, .button.success.active {
      background: var(--success-darker); }
    .button.success:focus {
      box-shadow: 0 0 0 4px hsla(var(--success-darker-hsl), 0.25); }
  .button.alert {
    background: var(--alert);
    border-color: var(--alert-darker); }
    .button.alert:hover, .button.alert.active {
      background: var(--alert-darker); }
    .button.alert:focus {
      box-shadow: 0 0 0 4px hsla(var(--alert-darker-hsl), 0.25); }
  .button.neutral {
    --neutral-darker: hsl(0, 3%, 48%);
    --neutral-darker-hsl: 0, 3%, 48%;
    background: var(--text-light);
    border-color: var(--neutral-darker); }
    .button.neutral.active {
      background: var(--neutral-darker); }
    .button.neutral:hover {
      background: var(--neutral-darker);
      box-shadow: none; }
    .button.neutral:focus {
      box-shadow: 0 0 0 4px hsla(var(--neutral-darker-hsl), 0.25); }
  .button.outlined {
    border: 1px solid var(--bg-muted);
    border-radius: var(--radius);
    background: transparent;
    font-weight: 500;
    font-size: 14px;
    color: var(--text-muted);
    line-height: 36px;
    display: flex;
    height: 36px;
    padding: 0 11px; }
    .button.outlined .text {
      color: var(--text-muted); }
    .button.outlined.active {
      box-shadow: none;
      background: hsla(var(--text-light-hsl), 0.2); }
    .button.outlined:hover, .button.outlined.active {
      border-color: var(--text-light); }
      .button.outlined:hover .icon, .button.outlined.active .icon {
        top: 0; }
      .button.outlined:hover .text, .button.outlined.active .text {
        top: 0; }
    .button.outlined:focus {
      box-shadow: 0 0 0 4px hsla(var(--bg-muted-hsl), 0.5); }
  .button.transparent {
    opacity: 0.3; }

/*
  ----- FORMS -----

  <label>
    Label title
    <input type="text">
  </label>
*/
label {
  font-size: 12px;
  line-height: 36px;
  color: var(--text-light);
  text-transform: uppercase;
  cursor: pointer; }
  label:hover {
    color: var(--text-muted); }
  label:focus-within {
    color: var(--hub);
    font-weight: 560; }
  label.toggle-button {
    display: flex;
    text-transform: none;
    line-height: 24px;
    margin: 12px 0; }
    label.toggle-button:focus-within {
      font-weight: inherit; }
    label.toggle-button SliderField {
      flex: auto;
      margin: 4px 18px 0 0; }
    label.toggle-button .text {
      flex: 1 1 100%;
      color: var(--text-muted); }
      label.toggle-button .text strong {
        font-size: 15px;
        color: var(--text);
        display: block; }
      label.toggle-button .text small {
        font-size: 13px; }

input, textarea, select {
  box-sizing: border-box;
  background: var(--card);
  border: 1px solid var(--bg-muted);
  border-radius: var(--radius);
  outline: none;
  width: 100%;
  padding: 12px 24px;
  margin-bottom: 12px;
  font-size: 15px;
  color: var(--text);
  line-height: 24px; }
  input[type="checkbox"], textarea[type="checkbox"], select[type="checkbox"] {
    width: auto; }
  input:not(.button)[disabled], input:not(.button)[readonly], textarea:not(.button)[disabled], textarea:not(.button)[readonly], select:not(.button)[disabled], select:not(.button)[readonly] {
    color: var(--text-muted); }
  input:not(.button):hover, textarea:not(.button):hover, select:not(.button):hover {
    border: 1px solid var(--text-light); }
  input:not(.button):focus, textarea:not(.button):focus, select:not(.button):focus {
    border: 1px solid var(--hub);
    box-shadow: 0px 0px 0px 3px hsla(var(--hub-hsl), 0.2); }

.table-header {
  font-size: 12px;
  line-height: 24px;
  color: var(--text-light);
  text-transform: uppercase; }

.howto-link:hover, .howto-link:focus {
  text-decoration: underline; }

.howto-link::after {
  content: " ->"; }

.control-bar {
  background-color: var(--card-muted);
  display: grid;
  margin: 0 calc(-1 * var(--main-content-gutter));
  padding: 0 var(--main-content-gutter); }
  @media only screen and (min-width: 800px) {
    .control-bar {
      display: flex; } }
  .control-bar .filtering {
    flex: 1 1;
    align-self: flex-start;
    display: flex; }
    .control-bar .filtering > * {
      border-right: 1px solid var(--bg-muted); }
  .control-bar .sorting {
    flex: 0 1;
    align-self: center;
    display: flex; }
    .control-bar .sorting > * {
      border-left: 1px solid var(--bg-muted); }

.picker-with-search {
  --list-height: 320px;
  background: var(--card);
  border: 1px solid var(--bg-muted);
  border-radius: var(--radius); }
  .picker-with-search .search {
    border-bottom: 1px solid var(--bg-muted);
    display: flex;
    align-items: center;
    padding: 0 0 0 24px; }
    .picker-with-search .search input {
      border: none;
      margin: 0;
      box-shadow: none; }
    .picker-with-search .search:focus-within .icon * {
      fill: var(--hub); }
  .picker-with-search ul.items {
    padding: 6px;
    margin: 0;
    list-style: none;
    font-size: 13px;
    max-height: var(--list-height);
    overflow: auto; }
    .picker-with-search ul.items label {
      line-height: 24px;
      text-transform: none;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      padding: 6px 18px;
      margin: 2px 0;
      border-radius: var(--radius);
      cursor: pointer; }
      .picker-with-search ul.items label:hover {
        background: var(--card-muted); }
      .picker-with-search ul.items label.selected {
        background: hsla(var(--hub-hsl), 0.1); }
        .picker-with-search ul.items label.selected .name, .picker-with-search ul.items label.selected .meta {
          color: var(--hub); }
        .picker-with-search ul.items label.selected:hover {
          background: hsla(var(--hub-hsl), 0.15); }
      .picker-with-search ul.items label .checkbox {
        width: auto;
        padding: 0;
        margin: 0;
        flex: 0; }
        .picker-with-search ul.items label .checkbox[disabled] ~ .name {
          color: var(--text-muted); }
        .picker-with-search ul.items label .checkbox[disabled] ~ .meta {
          color: var(--text-light); }
      .picker-with-search ul.items label .icon {
        margin-left: 18px; }
      .picker-with-search ul.items label .name {
        margin: 0 24px 0 12px;
        flex: 1 1;
        color: var(--text);
        font-weight: 600; }
      .picker-with-search ul.items label .meta {
        font-weight: 400;
        color: var(--text-muted); }

section.not-found {
  width: 100%;
  border: 2px dashed var(--bg-muted);
  padding: 48px 24px;
  text-align: center; }
  section.not-found h1 {
    font-size: 18px;
    line-height: 36px;
    margin: 0; }
  section.not-found p {
    font-size: 15px;
    line-height: 24px;
    color: var(--text-muted);
    margin: 12px auto 24px;
    max-width: 33rem; }
  section.not-found .button {
    display: inline-block; }

.mat-datepicker-content {
  translate: -54px 6px; }

/*
.debug-responsivity {
  .size {
    position: fixed;
    bottom: 0;
    left: 0;
    background: var(--text);
    color: var(--bg);
    font-size: 0.6em;
    font-weight: 600;
    padding: 0 3px;
    display: none;
  }
  .none { display: inline-block; }
  @include break(xs) {
    .size { display: none; }
    .xs { display: inline-block; }
  }
  @include break(s) {
    .size { display: none; }
    .s { display: inline-block; }
  }
  @include break(m) {
    .size { display: none; }
    .m { display: inline-block; }
  }
  @include break(t) {
    .size { display: none; }
    .t { display: inline-block; }
  }
  @include break(l) {
    .size { display: none; }
    .l { display: inline-block; }
  }
  @include break(xl) {
    .size { display: none; }
    .xl { display: inline-block; }
  }
  @include break(hd) {
    .size { display: none; }
    .hd { display: inline-block; }
  }
}
*/
.show-grid {
  background-image: linear-gradient(to bottom, #0ff 0px, rgba(255, 255, 255, 0) 1px);
  background-repeat: repeat-y;
  background-size: 100% 12px; }

.storybook-button {
  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  font-weight: 700;
  border: 0;
  border-radius: 3em;
  cursor: pointer;
  display: inline-block;
  line-height: 1; }

.storybook-button--primary {
  color: white;
  background-color: red; }

.storybook-button--secondary {
  color: #ccc;
  background-color: transparent;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset; }

.storybook-button--small {
  font-size: 12px;
  padding: 10px 16px; }

.storybook-button--medium {
  font-size: 14px;
  padding: 11px 20px; }

.storybook-button--large {
  font-size: 16px;
  padding: 12px 24px; }

/*
  Override SASS' handling of HSL(a) color functions, don't touch it and let CSS handle it itself.
  This will enable the trick with variable alpha channels for CSS color variables (see below).
*/
/*
  Function for defining (not only) vertical rhythm by multiplies of 12px
    Examples:
    width: size(2); (equals to "width: 24px;")
    line-height: size(3); (equals to "line-height: 36px;")
*/
/*
  Responsivity mixin for custom min-width styles
    Examples:
    @include break-from(450px) { ... }
*/
:root {
  /*
    Usage:
    - regular colors: "color: var(--hub);"
    - transparent colors: "color: hsla(var(--hub-hsl), 0.3);" (mind the "-hsl" suffix in variable)
  */
  --hub: hsl(278, 30%, 48%);
  --hub-hsl: 278, 30%, 48%;
  --hub-darker: hsl(278, 34%, 31%);
  --hub-darker-hsl: 278, 34%, 31%;
  --oss: hsl(2, 48%, 39%);
  --oss-hsl: 2, 48%, 39%;
  --oss-darker: hsl(2, 52%, 25%);
  --oss-darker-hsl: 2, 52%, 25%;
  --enterprise: hsl(162, 24%, 38%);
  --enterprise-hsl: 162, 24%, 38%;
  --enterprise-darker: hsl(162, 26%, 26%);
  --enterprise-darker-hsl: 162, 26%, 26%;
  --vault: hsl(229, 25%, 45%);
  --vault-hsl: 229, 25%, 45%;
  --vault-darker: hsl(230, 28%, 31%);
  --vault-darker-hsl: 230, 28%, 31%;
  --secondary: hsl(0, 3%, 41%);
  --secondary-hsl: 0, 3%, 41%;
  --secondary-darker: hsl(0, 3%, 48%);
  --secondary-darker-hsl: 0, 3%, 48%;
  --text: hsl(0, 3%, 15%);
  --text-hsl: 0, 3%, 15%;
  --text-muted: hsl(0, 3%, 41%);
  --text-muted-hsl: 0, 3%, 41%;
  --text-light: hsl(0, 5%, 63%);
  --text-light-hsl: 0, 5%, 63%;
  --card: hsl(0, 0%, 100%);
  --card-hsl: 0, 0%, 100%;
  --card-muted: hsl(0, 0%, 98%);
  --card-muted-hsl: 0, 0%, 98%;
  --info: hsl(205, 74%, 53%);
  --info-hsl: 205, 74%, 53%;
  --info-darker: hsl(205, 71%, 41%);
  --info-darker-hsl: 205, 71%, 41%;
  --success: hsl(131, 31%, 52%);
  --success-hsl: 131, 31%, 52%;
  --success-darker: hsl(130, 35%, 39%);
  --success-darker-hsl: 130, 35%, 39%;
  --warning: hsl(47, 86%, 47%);
  --warning-hsl: 47, 86%, 47%;
  --alert: hsl(2, 58%, 48%);
  --alert-darker: hsl(2, 63%, 36%);
  --alert-darker-hsl: 2, 63%, 36%;
  --alert-hsl: 2, 58%, 48%;
  --bg: hsl(0, 5%, 93%);
  --bg-hsl: 0, 5%, 93%;
  --bg-muted: hsl(0, 4%, 89%);
  --bg-muted-hsl: 0, 4%, 89%;
  --bg-white: hsl(0, 0%, 100%);
  --bg-white-hsl: 0, 0%, 100%;
  --upper-gradient: linear-gradient(90deg, var(--hub) 0%, #b255b4 58.33%, var(--oss) 100%);
  --upper-gradient-mobile: linear-gradient(90deg, var(--hub) 0%, #b255b4 100%);
  --radius: 4px;
  --main-content-gutter: 24px; }
  @media only screen and (min-width: 800px) {
    :root {
      --main-content-gutter: 36px; } }
  @media only screen and (min-width: 1200px) {
    :root {
      --main-content-gutter: 48px; } }

/*
  Usage:
  @extend %box-shadow;
*/
.control-bar {
  box-shadow: 0px 4px 34px rgba(0, 0, 0, 0.04), 0px 3px 4px rgba(0, 0, 0, 0.1); }

.button, .button .icon, .button .text, label, input, textarea, select, .picker-with-search ul.items label {
  transition: all 0.1s; }

/*
  Self-hosted fonts
*/
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("/fonts/Inter/Inter-Regular.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-Regular.woff?v=3.18") format("woff"); }

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("/fonts/Inter/Inter-Medium.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-Medium.woff?v=3.18") format("woff"); }

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("/fonts/Inter/Inter-SemiBold.woff2?v=3.18") format("woff2"), url("/fonts/Inter/Inter-SemiBold.woff?v=3.18") format("woff"); }

/* -------------------------------------------------------
Variable font.
Usage:

  body {
    font-family: 'Inter', sans-serif; // use regular Inter font by default..
    @supports (font-variation-settings: normal) {
      font-family: 'Inter var', sans-serif; // ..but if supported, use variable Inter font instead (all-in-one)
    }
  }

*/
@font-face {
  font-family: 'Inter var';
  font-weight: 100 900;
  font-display: swap;
  font-style: normal;
  font-named-instance: 'Regular';
  src: url("/fonts/Inter/Inter-roman.var.woff2?v=3.18") format("woff2"); }

html {
  box-sizing: border-box; }

body {
  box-sizing: border-box;
  background: var(--bg);
  margin: 0;
  padding: 0;
  font-family: 'Inter', sans-serif; }
  @supports (font-variation-settings: normal) {
    body {
      font-family: 'Inter var', sans-serif; } }

h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  color: var(--text); }

p {
  font-size: 15px;
  line-height: 24px;
  color: var(--text-muted); }

b, strong {
  font-weight: 500; }

a {
  text-decoration: none; }

hr {
  border: none;
  border-top: 1px solid var(--bg-muted);
  margin: 24px 0; }
  .--padded hr {
    margin: 24px -24px; }
  hr.--thick {
    border-width: 3px; }

.block .block-header .icon {
  opacity: 0.4; }

.block .block-header h1 {
  line-height: 36px;
  font-size: 16px;
  margin: 0 0 0 12px; }

.block .body .--padded {
  padding: 24px 24px;
  display: block; }

/*
  ----- BUTTONS -----

  a) <ButtonField text="xxx" action="xxx" type="neutral"></ButtonField>
  b) <input type="submit" class="input alert button" value="xxx">
  c) <a class="neutral button"><span class="text">xxx</span></a>
*/
.button {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 36px;
  background: var(--hub);
  border: 0;
  border-bottom: 2px solid var(--hub-darker);
  border-radius: var(--radius);
  cursor: pointer;
  outline: none;
  padding: 0 15px;
  color: var(--bg-white);
  font-weight: 600;
  font-size: 14px; }
  .button .icon {
    display: flex;
    opacity: 0.5;
    position: relative; }
    .button .icon + .text {
      margin-left: 10px; }
  .button .text {
    color: var(--card);
    position: relative; }
  .button.active {
    box-shadow: 0 3px 1px hsla(var(--text-hsl), 0.4) inset; }
  .button:hover, .button.active {
    background: var(--hub-darker);
    text-decoration: none; }
    .button:hover .icon, .button.active .icon {
      top: 1px; }
    .button:hover .text, .button.active .text {
      top: 1px; }
    .button:hover.input, .button.active.input {
      padding-top: 2px; }
  .button:focus {
    box-shadow: 0 0 0 4px hsla(var(--hub-hsl), 0.25); }
  .button.input {
    width: auto; }
  .button.success {
    background: var(--success);
    border-color: var(--success-darker); }
    .button.success:hover, .button.success.active {
      background: var(--success-darker); }
    .button.success:focus {
      box-shadow: 0 0 0 4px hsla(var(--success-darker-hsl), 0.25); }
  .button.alert {
    background: var(--alert);
    border-color: var(--alert-darker); }
    .button.alert:hover, .button.alert.active {
      background: var(--alert-darker); }
    .button.alert:focus {
      box-shadow: 0 0 0 4px hsla(var(--alert-darker-hsl), 0.25); }
  .button.neutral {
    --neutral-darker: hsl(0, 3%, 48%);
    --neutral-darker-hsl: 0, 3%, 48%;
    background: var(--text-light);
    border-color: var(--neutral-darker); }
    .button.neutral.active {
      background: var(--neutral-darker); }
    .button.neutral:hover {
      background: var(--neutral-darker);
      box-shadow: none; }
    .button.neutral:focus {
      box-shadow: 0 0 0 4px hsla(var(--neutral-darker-hsl), 0.25); }
  .button.outlined {
    border: 1px solid var(--bg-muted);
    border-radius: var(--radius);
    background: transparent;
    font-weight: 500;
    font-size: 14px;
    color: var(--text-muted);
    line-height: 36px;
    display: flex;
    height: 36px;
    padding: 0 11px; }
    .button.outlined .text {
      color: var(--text-muted); }
    .button.outlined.active {
      box-shadow: none;
      background: hsla(var(--text-light-hsl), 0.2); }
    .button.outlined:hover, .button.outlined.active {
      border-color: var(--text-light); }
      .button.outlined:hover .icon, .button.outlined.active .icon {
        top: 0; }
      .button.outlined:hover .text, .button.outlined.active .text {
        top: 0; }
    .button.outlined:focus {
      box-shadow: 0 0 0 4px hsla(var(--bg-muted-hsl), 0.5); }
  .button.transparent {
    opacity: 0.3; }

/*
  ----- FORMS -----

  <label>
    Label title
    <input type="text">
  </label>
*/
label {
  font-size: 12px;
  line-height: 36px;
  color: var(--text-light);
  text-transform: uppercase;
  cursor: pointer; }
  label:hover {
    color: var(--text-muted); }
  label:focus-within {
    color: var(--hub);
    font-weight: 560; }
  label.toggle-button {
    display: flex;
    text-transform: none;
    line-height: 24px;
    margin: 12px 0; }
    label.toggle-button:focus-within {
      font-weight: inherit; }
    label.toggle-button SliderField {
      flex: auto;
      margin: 4px 18px 0 0; }
    label.toggle-button .text {
      flex: 1 1 100%;
      color: var(--text-muted); }
      label.toggle-button .text strong {
        font-size: 15px;
        color: var(--text);
        display: block; }
      label.toggle-button .text small {
        font-size: 13px; }

input, textarea, select {
  box-sizing: border-box;
  background: var(--card);
  border: 1px solid var(--bg-muted);
  border-radius: var(--radius);
  outline: none;
  width: 100%;
  padding: 12px 24px;
  margin-bottom: 12px;
  font-size: 15px;
  color: var(--text);
  line-height: 24px; }
  input[type="checkbox"], textarea[type="checkbox"], select[type="checkbox"] {
    width: auto; }
  input:not(.button)[disabled], input:not(.button)[readonly], textarea:not(.button)[disabled], textarea:not(.button)[readonly], select:not(.button)[disabled], select:not(.button)[readonly] {
    color: var(--text-muted); }
  input:not(.button):hover, textarea:not(.button):hover, select:not(.button):hover {
    border: 1px solid var(--text-light); }
  input:not(.button):focus, textarea:not(.button):focus, select:not(.button):focus {
    border: 1px solid var(--hub);
    box-shadow: 0px 0px 0px 3px hsla(var(--hub-hsl), 0.2); }

.table-header {
  font-size: 12px;
  line-height: 24px;
  color: var(--text-light);
  text-transform: uppercase; }

.howto-link:hover, .howto-link:focus {
  text-decoration: underline; }

.howto-link::after {
  content: " ->"; }

.control-bar {
  background-color: var(--card-muted);
  display: grid;
  margin: 0 calc(-1 * var(--main-content-gutter));
  padding: 0 var(--main-content-gutter); }
  @media only screen and (min-width: 800px) {
    .control-bar {
      display: flex; } }
  .control-bar .filtering {
    flex: 1 1;
    align-self: flex-start;
    display: flex; }
    .control-bar .filtering > * {
      border-right: 1px solid var(--bg-muted); }
  .control-bar .sorting {
    flex: 0 1;
    align-self: center;
    display: flex; }
    .control-bar .sorting > * {
      border-left: 1px solid var(--bg-muted); }

.picker-with-search {
  --list-height: 320px;
  background: var(--card);
  border: 1px solid var(--bg-muted);
  border-radius: var(--radius); }
  .picker-with-search .search {
    border-bottom: 1px solid var(--bg-muted);
    display: flex;
    align-items: center;
    padding: 0 0 0 24px; }
    .picker-with-search .search input {
      border: none;
      margin: 0;
      box-shadow: none; }
    .picker-with-search .search:focus-within .icon * {
      fill: var(--hub); }
  .picker-with-search ul.items {
    padding: 6px;
    margin: 0;
    list-style: none;
    font-size: 13px;
    max-height: var(--list-height);
    overflow: auto; }
    .picker-with-search ul.items label {
      line-height: 24px;
      text-transform: none;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      padding: 6px 18px;
      margin: 2px 0;
      border-radius: var(--radius);
      cursor: pointer; }
      .picker-with-search ul.items label:hover {
        background: var(--card-muted); }
      .picker-with-search ul.items label.selected {
        background: hsla(var(--hub-hsl), 0.1); }
        .picker-with-search ul.items label.selected .name, .picker-with-search ul.items label.selected .meta {
          color: var(--hub); }
        .picker-with-search ul.items label.selected:hover {
          background: hsla(var(--hub-hsl), 0.15); }
      .picker-with-search ul.items label .checkbox {
        width: auto;
        padding: 0;
        margin: 0;
        flex: 0; }
        .picker-with-search ul.items label .checkbox[disabled] ~ .name {
          color: var(--text-muted); }
        .picker-with-search ul.items label .checkbox[disabled] ~ .meta {
          color: var(--text-light); }
      .picker-with-search ul.items label .icon {
        margin-left: 18px; }
      .picker-with-search ul.items label .name {
        margin: 0 24px 0 12px;
        flex: 1 1;
        color: var(--text);
        font-weight: 600; }
      .picker-with-search ul.items label .meta {
        font-weight: 400;
        color: var(--text-muted); }

section.not-found {
  width: 100%;
  border: 2px dashed var(--bg-muted);
  padding: 48px 24px;
  text-align: center; }
  section.not-found h1 {
    font-size: 18px;
    line-height: 36px;
    margin: 0; }
  section.not-found p {
    font-size: 15px;
    line-height: 24px;
    color: var(--text-muted);
    margin: 12px auto 24px;
    max-width: 33rem; }
  section.not-found .button {
    display: inline-block; }

.mat-datepicker-content {
  translate: -54px 6px; }

/*
.debug-responsivity {
  .size {
    position: fixed;
    bottom: 0;
    left: 0;
    background: var(--text);
    color: var(--bg);
    font-size: 0.6em;
    font-weight: 600;
    padding: 0 3px;
    display: none;
  }
  .none { display: inline-block; }
  @include break(xs) {
    .size { display: none; }
    .xs { display: inline-block; }
  }
  @include break(s) {
    .size { display: none; }
    .s { display: inline-block; }
  }
  @include break(m) {
    .size { display: none; }
    .m { display: inline-block; }
  }
  @include break(t) {
    .size { display: none; }
    .t { display: inline-block; }
  }
  @include break(l) {
    .size { display: none; }
    .l { display: inline-block; }
  }
  @include break(xl) {
    .size { display: none; }
    .xl { display: inline-block; }
  }
  @include break(hd) {
    .size { display: none; }
    .hd { display: inline-block; }
  }
}
*/
.show-grid {
  background-image: linear-gradient(to bottom, #0ff 0px, rgba(255, 255, 255, 0) 1px);
  background-repeat: repeat-y;
  background-size: 100% 12px; }

.sidebar {
  box-sizing: border-box;
  width: 280px;
  padding: 24px 24px 36px;
  box-shadow: 0px 4px 34px rgba(0, 0, 0, 0.1);
  background: var(--card);
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 9999; }
  .sidebar.closed {
    display: none; }
  @media only screen and (min-width: 800px) {
    .sidebar {
      position: static;
      flex: 0 0 280px;
      z-index: 1; }
      .sidebar.closed {
        display: block; } }

.sidebar-panel {
  height: 100%; }
  .sidebar-panel .hamburger {
    display: block;
    padding-bottom: 10px;
    position: relative;
    top: -12px;
    /*@include break-from(800px) {
            display: none;
        }*/ }
    .sidebar-panel .hamburger label {
      display: flex;
      flex-direction: column;
      width: 30px;
      cursor: pointer;
      justify-content: center; }
      .sidebar-panel .hamburger label span {
        background: var(--hub);
        border-radius: 10px;
        height: 3px;
        margin: 3px 0;
        transition: 0.4s cubic-bezier(0.68, -0.6, 0.32, 1.6); }
        .sidebar-panel .hamburger label span:nth-of-type(1) {
          width: 50%; }
        .sidebar-panel .hamburger label span:nth-of-type(2) {
          width: 100%; }
        .sidebar-panel .hamburger label span:nth-of-type(3) {
          width: 75%; }
    .sidebar-panel .hamburger input[type="checkbox"] {
      display: none; }
  .sidebar-panel .brand-logo {
    display: flex;
    justify-content: flex-start;
    align-items: center; }
    .sidebar-panel .brand-logo img {
      margin-right: 10px; }
    .sidebar-panel .brand-logo .name {
      color: var(--text);
      font-weight: 600;
      font-size: 18px; }
      .sidebar-panel .brand-logo .name .version {
        color: var(--text-light);
        font-size: 10px;
        font-weight: 400;
        margin-left: 5px; }
